upstream ui {
  server localhost:8080;
}

server {

  server_name crypter.adizes.com.br www.crypter.adizes.com.br;
  listen [::]:443 ssl ipv6only=on; # managed by Certbot
  listen 443 ssl; # managed by Certbot
  ssl_certificate /etc/letsencrypt/live/crypter.adizes.com.br/fullchain.pem; # managed by Certbot
  ssl_certificate_key /etc/letsencrypt/live/crypter.adizes.com.br/privkey.pem; # managed by Certbot
  include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot


  # Optimize session cache
  ssl_session_cache shared:SSL:50m;

  # OCSP Stapling
  ssl_stapling on;
  ssl_stapling_verify on;
  resolver 8.8.8.8 8.8.4.4 208.67.222.222 208.67.220.220 valid=60s;
  resolver_timeout 2s;

  # Disable HTML caching
  location ~* \.(?:html?)$ {
    add_header Cache-Control "no-cache";
  }
  gzip on;
  gzip_vary on;
  gzip_proxied any;
  gzip_comp_level 6;
  gzip_types text/plain text/css text/xml application/json application/javascript application/rss+xml application/atom+xml image/svg+xml;

  # security headers
  add_header X-Frame-Options SAMEORIGIN always;
  add_header Cache-Control "no-cache, no-store, must-revalidate";
  add_header X-XSS-Protection "1; mode=block" always;
  add_header X-Content-Type-Options "nosniff" always;
  add_header Referrer-Policy "origin-when-cross-origin" always;
  add_header Content-Security-Policy "default-src 'self' http: https: ws: wss: data: blob: 'unsafe-inline'; frame-ancestors 'self';" always;
  add_header Permissions-Policy "interest-cohort=()" always;
  add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;


  reset_timedout_connection on;
  send_timeout 2;
  keepalive_timeout 300;
  keepalive_requests 100000;

  error_page 404 403 405 /custom_404.html;
  location = /custom_404.html {
    root /usr/local/openresty/nginx/html;
    internal;
  }
  access_log /var/log/nginx/access.log combined buffer=512k flush=1m;
  error_log /var/log/nginx/error.log warn;

  #location / {
  #    # Proxy timeouts
  #    proxy_connect_timeout 60s;
  #    proxy_send_timeout 60m;
  #    proxy_pass http://ui;
  #}
  location / {
    root /usr/share/nginx/html;
    index index.html index.htm;
    try_files $uri $uri/ /index.html =404;
  }
  location /decrypt {
    # Proxy timeouts
    proxy_connect_timeout 60s;
    proxy_send_timeout 60m;
    proxy_pass http://ui/decrypt;
  }
  location /scan-camera {
    # Proxy timeouts
    proxy_connect_timeout 60s;
    proxy_send_timeout 60m;
    proxy_pass http://ui/scan-camera;
  }

  location @rewrites {
    rewrite ^(.+)$ /index.html last;
  }

  location /backoffice/ {
    proxy_http_version 1.1;
    proxy_set_header Content-Type "text/event-stream";
    proxy_set_header Cache-Control "no-cache";
    proxy_set_header X-Accel-Buffering "no";
    proxy_buffering off;
    chunked_transfer_encoding off;
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;
    # Proxy SSL
    proxy_ssl_server_name on;
    # Proxy headers
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header Forwarded $proxy_add_forwarded;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Port $server_port;
    # Proxy timeouts
    proxy_connect_timeout 60s;
    proxy_send_timeout 60m;
    proxy_read_timeout 60m;

    proxy_pass https://localhost:44318/;
  }

  location /decrypt-api/ {

    # Proxy timeouts
    proxy_connect_timeout 60s;
    proxy_send_timeout 60m;
    proxy_read_timeout 60m;
    proxy_pass http://localhost:8083/;
  }
  location /encrypt/ {
    # Proxy timeouts
    proxy_connect_timeout 60m;
    proxy_send_timeout 60m;
    proxy_read_timeout 60m;

    proxy_pass http://localhost:8082/;
  }
  location /scanner/ {
    # Proxy timeouts
    proxy_connect_timeout 60m;
    proxy_send_timeout 60m;
    proxy_read_timeout 60m;
    proxy_pass http://localhost:5000/;
  }

}

server {
  if ($host = crypter.adizes.com.br) {
    return 301 https://$host$request_uri;
  }


  listen 80 default_server;
  listen [::]:80 default_server;
  server_name crypter.adizes.com.br www.crypter.adizes.com.br;

  server_name _;
  location / {
    return 301 https://crypter.adizes.com.br$request_uri;
  }

}

server {
  listen 443 ssl http2;
  listen [::]:443 ssl http2;

  server_name *.crypter.adizes.com.br;

  # SSL
  ssl_certificate /etc/letsencrypt/live/crypter.adizes.com.br/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/crypter.adizes.com.br/privkey.pem;
  ssl_trusted_certificate /etc/letsencrypt/live/crypter.adizes.com.br/chain.pem;

  return 301 https://crypter.adizes.com.br$request_uri;
}
